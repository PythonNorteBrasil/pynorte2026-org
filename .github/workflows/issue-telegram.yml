name: Notify Telegram on Issue Opened

on:
  issues:
    types: [opened]  # adicione reopened/edited se quiser

jobs:
  notify-telegram:
    runs-on: ubuntu-latest
    permissions:
      issues: read
    steps:
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install httpx
        run: |
          python -m pip install --upgrade pip
          pip install httpx

      - name: Send Telegram notification (httpx)
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          CHAT_ID: "-1002597220683"
          THREAD_ID: "6"
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          ISSUE_URL: ${{ github.event.issue.html_url }}
          ISSUE_USER: ${{ github.event.issue.user.login }}
          ISSUE_BODY: ${{ github.event.issue.body }}
          REPO: ${{ github.repository }}
        run: |
          python - <<'PY'
          import os, httpx, textwrap, html

          token = os.environ["TELEGRAM_BOT_TOKEN"]
          chat_id = os.environ["CHAT_ID"]
          thread_id = int(os.environ.get("THREAD_ID","0") or 0)

          title   = os.environ.get("ISSUE_TITLE","(sem tÃ­tulo)")
          number  = os.environ.get("ISSUE_NUMBER","?")
          url     = os.environ.get("ISSUE_URL","")
          user    = os.environ.get("ISSUE_USER","?")
          repo    = os.environ.get("REPO","?")
          body    = os.environ.get("ISSUE_BODY") or ""
          body = body.strip()

          # Limita corpo para evitar mensagens gigantes no Telegram
          max_chars = 700
          if len(body) > max_chars:
              body = body[:max_chars] + "â€¦"

          # Escapa para HTML (parse_mode=HTML)
          def esc(s): return html.escape(s or "")

          text = textwrap.dedent(f"""
          ðŸ†• <b>Issue aberta</b> em <b>{esc(repo)}</b>
          <b>#{esc(str(number))}</b>: {esc(title)}
          ðŸ‘¤ Autor: {esc(user)}
          ðŸ”— <a href="{esc(url)}">{esc(url)}</a>

          <b>DescriÃ§Ã£o</b>:
          {esc(body) if body else '(sem descriÃ§Ã£o)'}
          """).strip()

          api = f"https://api.telegram.org/bot{token}/sendMessage"
          payload = {
              "chat_id": chat_id,
              "text": text,
              "parse_mode": "HTML",
              "disable_web_page_preview": True,
          }
          if thread_id:
              payload["message_thread_id"] = thread_id

          with httpx.Client(timeout=20.0, follow_redirects=True) as client:
              r = client.post(api, data=payload)
              try:
                  data = r.json()
              except Exception:
                  print("Resposta nÃ£o-JSON:", r.text)
                  raise SystemExit(1)

              if not data.get("ok"):
                  print("Falha ao enviar:", data)
                  raise SystemExit(1)

              print("NotificaÃ§Ã£o enviada com sucesso.")
          PY
